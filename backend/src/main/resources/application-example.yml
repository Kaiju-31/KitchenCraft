# Configuration exemple pour KitchenCraft
# Copiez ce fichier vers application.yml et modifiez les valeurs selon votre environnement

spring:
  profiles:
    active: dev # Changez en 'prod' pour la production

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/kitchencraft}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:your_secure_password_here}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update} # 'validate' en production
    show-sql: ${SHOW_SQL:false} # Toujours false en production
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${FORMAT_SQL:false}
        use_sql_comments: ${USE_SQL_COMMENTS:false}

  # Configuration CORS pour le développement
  web:
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173}
      allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: ${CORS_ALLOWED_HEADERS:*}
      allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}

# Configuration de logging
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    org.springframework: ${LOG_LEVEL_SPRING:INFO}
    com.kitchencraft: ${LOG_LEVEL_APP:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL_PARAMS:WARN}
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/kitchencraft.log}

# Configuration serveur
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:}
  compression:
    enabled: ${COMPRESSION_ENABLED:true}
    mime-types: ${COMPRESSION_MIME_TYPES:text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json}

# Configuration management
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,info,metrics}
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:when-authorized}

# Configuration application spécifique
kitchencraft:
  # Configuration cache
  cache:
    enabled: ${CACHE_ENABLED:true}
    ttl-minutes: ${CACHE_TTL_MINUTES:30}
    max-entries: ${CACHE_MAX_ENTRIES:1000}
  
  # Configuration sécurité
  security:
    cors:
      enabled: ${SECURITY_CORS_ENABLED:true}
    rate-limit:
      enabled: ${RATE_LIMIT_ENABLED:false}
      requests-per-minute: ${RATE_LIMIT_RPM:100}
  
  # Configuration API
  api:
    version: ${API_VERSION:v1}
    documentation:
      enabled: ${API_DOC_ENABLED:true}
      title: ${API_DOC_TITLE:KitchenCraft API}
      description: ${API_DOC_DESC:API pour la gestion des recettes et plannings culinaires}

---
# Profil de développement
spring:
  config:
    activate:
      on-profile: dev

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

logging:
  level:
    org.springframework: DEBUG
    com.kitchencraft: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops

---
# Profil de production
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false

logging:
  level:
    root: WARN
    org.springframework: WARN
    com.kitchencraft: INFO
    org.hibernate.SQL: WARN

management:
  endpoints:
    web:
      exposure:
        include: health,info